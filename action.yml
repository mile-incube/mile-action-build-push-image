name: 'Build and push docker image'
inputs:
  dockerfile:
    required: true
    type: string
  image-name:
    required: true
    type: string
  registry:
    default: "ghcr.io"
    type: string
  push:
    default: false
    type: boolean
  context:
    default: "src"
    type: string
  artifact:
    required: false
    type: string
  artifactPath:
    default: ""
    type: string
  build-args:
    default: ""
    type: string
  env:
    required: false
    type: string
  gitSubmodules:
    default: false
    type: string
  #secrets
  az-creds:
    description: 'Use this azure credentials instead to push'
    required: false
  acr:
    description: 'acr'
    required: false
  gitToken:
    description: 'GitHub Access Token for pulling'
    required: false
outputs:
  image-name:
    description: "The image name"
    value: ${{ github.repository }}/${{ inputs.image-name }}
  image-tag:
    description: "The image tag"
    value: ${{ steps.meta.outputs.version }}
  image-digest:
    description: "The image digest"
    value: ${{ steps.build-and-push.outputs.digest }}
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: ${{ inputs.gitSubmodules }}
        token: ${{ inputs.gitToken || github.token }}

    - name: Download artifacts
      if: ${{ inputs.artifact }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact }}
        path: ${{ inputs.artifactPath }}

    # Install the cosign tool except on PR
    # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v2
      with:
        cosign-release: 'v1.9.0'

    # Workaround: https://github.com/docker/build-push-action/issues/461
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2
    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action

    - name: Get Registry
      if: github.event_name != 'pull_request'
      shell: bash
      run: |
        if [ "${{ inputs.acr }}" == "" ]; then
          echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
        else
          echo "REGISTRY=${{ inputs.acr }}" >> $GITHUB_ENV
        fi

    - name: Log into registry ghcr.io
      if: github.event_name != 'pull_request' && endsWith(env.REGISTRY, 'ghcr.io')
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.GITHUB_TOKEN }}

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      if: github.event_name != 'pull_request' && endsWith(env.REGISTRY, 'azurecr.io')
      with:
        creds: ${{ inputs.az-creds }}

    - name: Get Registry Credentials
      if: github.event_name != 'pull_request' && endsWith(env.REGISTRY, 'azurecr.io')
      id: getregistrycreds
      shell: bash
      run: |
        password=$(az acr login --name ${{ env.REGISTRY }} --expose-token --output tsv --query accessToken)
        echo "loginName=00000000-0000-0000-0000-000000000000" >> $GITHUB_OUTPUT
        echo "password=$password" >> $GITHUB_OUTPUT

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request' && endsWith(env.REGISTRY, 'azurecr.io')
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ steps.getregistrycreds.outputs.loginName }}
        password: ${{ steps.getregistrycreds.outputs.password }}

    - name: Get additional Image Name
      if: github.event_name != 'pull_request' && endsWith(env.REGISTRY, 'azurecr.io')
      id: additionalImage
      shell: bash
      run: |
        echo "imageName=${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.image-name }}" >> $GITHUB_OUTPUT

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ghcr.io/${{ github.repository }}/${{ inputs.image-name }}
          ${{ steps.additionalImage.outputs.imageName }}
        tags: |
          type=raw,value=${{ inputs.env }}
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        file: ${{ inputs.dockerfile }}
        context: ${{ inputs.context }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.build-args }}
        #no-cache: true  # Disable caching